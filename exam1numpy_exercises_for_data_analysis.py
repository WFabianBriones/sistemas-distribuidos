# -*- coding: utf-8 -*-
"""exam1NumPy_Exercises_for_Data_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17aJcM9QXQ_bRj8w-D3-_eKLpfJi5y1Oi

NumPy Exercises for Data Analysis
"""

# 1. Import numpy as np and see the version

# your code here
pass

import numpy as np
np.__version__

# 2. Create a 1D array of numbers from 0 to 9
# your code here
pass

arr = np.arange(10)
arr

# 3. Create a 3×3 numpy array of all True’s
# your code here
pass

arr1 = np.full((3, 3), True, dtype=bool)
arr1

# 4. Extract all odd numbers from arr
# your code here
pass

arr = np.arange(10)
print(arr)
print(arr[5])
odd = arr[arr % 2 != 0]
odd

# 5. Replace all odd numbers in arr with -1
# your code here
pass

arr = np.arange(10)
print(arr)
replace = np.where(arr % 2 == 1, -1, arr)
replace

#  6. Convert a 1D array to a 2D array with 2 rows
# your code here
pass

arr = np.arange(10)
print(arr)
print('--------------------------')
Convert = arr.reshape(2, -1)
Convert

#  7. Stack arrays a and b vertically
# your code here
pass

a = np.random.randint(1, 10, size= (2, 6))
print(a)
print('----------')
b = np.random.randint(1, 10, size= (2, 6))
print(b)
print('----------')
c = np.vstack((a, b))
print(c)

#  8. Stack the arrays a and b horizontally.
# your code here
pass

a = np.random.randint(1, 10, size= (2, 6))
print(a)
print('----------')
b = np.random.randint(1, 10, size= (2, 6))
print(b)
print('----------')
c = np.hstack((a, b))
print(c)

#  9. Get all items between 5 and 10 from a.
# your code here
import numpy as np
a = np.arange(15)
print (a)
print('--------------------------')
filter = (a > 5) & (a <10)
print(a[filter])

# pass

#  10. How to make a python function that handles scalars to work on numpy arrays?
# Hint
# Desired Output:
# a = np.array([5, 7, 9, 8, 6, 4, 5])
# b = np.array([6, 3, 4, 8, 9, 7, 1])
# pair_max(a, b)
# #> array([ 6.,  7.,  9.,  8.,  9.,  7.,  5.])


# your code here
import numpy as np

def maxx(x, y):
    """Get the maximum of two items"""
    x = np.array([5, 7, 9, 8, 6, 4, 5])
    y = np.array([6, 3, 4, 8, 9, 7, 1])
    return np.maximum(x, y)
    if x >= y:
        return x
    else:
        return y

maxx(1, 5)

#  11. Swap columns 1 and 2 in the array arr.
# Hint
# Desired Output:
# [[0 2 1]
#  [3 5 4]
#  [6 8 7]]


arr = np.arange(9).reshape(3,3)
print(arr)
print('--------------------------')
arr[:, [0, 1]] = arr[:, [1, 0]]
print(arr)
# your code here
pass

#  12. Create a 2D array of shape 5x3 to contain random decimal numbers between 5 and 10.
# Hint
# The desired Output should be like the following one:
#  [[ 8.50061025  9.10531502  6.85867783]
#   [ 9.76262069  9.87717411  7.13466701]
#   [ 7.48966403  8.33409158  6.16808631]
#   [ 7.75010551  9.94535696  5.27373226]
#   [ 8.0850361   5.56165518  7.31244004]]

print('--------------------------')
m = np.random.uniform(5, 10, size= (5, 3))
print (m)
print (m.ndim)
print (m.shape)
print (type(m))