#!/usr/bin/env python3
import pandas as pd
print('--------------------------------')
print('load the dataset')
df=pd.read_csv('students_dirty_dataset_100.csv')
print(df.head(10))
print(df.tail(10))
print(df.shape)
print('--------------------------------')
print('explore the dataset')
print(df.info())
print('--------------------------------')
print(df.describe(include='all'))
print('--------------------------------')
print('detect data quality issues')
print('empty')
print(df.isnull().sum())
print('duplicate')
print(df.duplicated().sum())
print('--------------------------------')
print(df['department'].value_counts())
print('--------------------------------')
print('handle missing value')
df['age'] = df['age'].fillna(df['age'].median())
# si no les funciona es mas bien una advertencia
# df['age'].fillna(df['age'].median(),inplace=True)
print('empty')
print(df.isnull().sum())
print('--------------------------------')
df['english_score'] = df['english_score'].fillna(df['english_score'].mean())
print(df.isnull().sum())
print('--------------------------------')
df['admission_year'] = df['admission_year'].fillna(df['admission_year'].mode()[0])
print(df.isnull().sum())
print('--------------------------------')
df['math_score'] = df['math_score'].fillna(df['math_score'].mean())
print(df.isnull().sum())
print('--------------------------------')
df['gender'] = df['gender'].fillna('unknown')
print(df.isnull().sum())

print('--------------------------------')
print('normalize categorial values')
df['department'] = df['department'].str.lower().str.strip()
print(df['department'].head(10))
print('--------------------------------')
df['department'] = df['department'].str.upper().str.strip()
print(df['department'].head(10))

print('--------------------------------')
print('remove duplicate')
df.drop_duplicates(inplace=True)
df.reset_index(drop=True,inplace=True)
print(df.shape)


print('--------------------------------')
print('create a new feature')
df['avr_score']=df[['math_score','english_score']].mean(axis=1)
print(df['avr_score'].head(10))
print('--------------------------------')
print(df.head(10))


print('--------------------------------')
print('display top performing students')
topstudensts=df.sort_values(by='avr_score',ascending=False).head(10)
print(topstudensts[['student_id','name','avr_score']])


print('--------------------------------')
print('export clean dateset')
df.to_csv('students_clean_dateset.csv', index=False)
print('ok')

